<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringFacetInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
    <!--spring的配置文件，声明controller和web相关的对象-->

    <!--声明数据源，访问数据库-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/>
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--set注入给DruidDataSource提供连接数据库的信息-->
        <!--使用属性配置文件中的数据，语法 ${key}-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.passwd}"/>
        <property name="maxActive" value="${jdbc.max}"/>
    </bean>
    <!--声明的是mybatis中提供的SqlSessionFactoryBean类，这个类内部创建SqlSessionFactory的-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--set注入 ，把数据库连接池赋给了dataSource属性-->
        <property name="dataSource" ref="myDataSource"/>
        <!--mybatis主配置文件的位置.在spring的配置文件中指定其他文件的路径，要使用classpath
            configLocation 属性是Resource类型，读取配置文件的
            它的赋值，使用value，指定文件路径，使用classpath：表示文件的位置
        -->
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>
    </bean>
    <!--声明dao-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.jhuniversity.crm.settings.dao"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.jhuniversity.crm.workbench.dao"/>
    </bean>
    <!--声明service的注解@Service 所在的包名位置-->
    <context:component-scan base-package="com.jhuniversity.crm.settings.service"/>
    <context:component-scan base-package="com.jhuniversity.crm.workbench.service"/>


    <!--配置事物：注解的配置或者aspectj的配置-->

</beans>